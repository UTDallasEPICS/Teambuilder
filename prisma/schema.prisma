generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("PRISMA_DB_URL")
}

model User {
  id          String     @id @default(uuid())
  email       String     @unique

  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@map("users")
}

model Partner {
  id             String      @id @default(uuid())
  name           String
  contactName    String      @map("contact_name")
  contactEmail   String      @map("contact_email")

  projects       Project[]   
  
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt

  @@map("partners")
}

model Project {
  id            String        @id @default(uuid())
  name          String
  description   String
  type          ProjectType
  status        Status
  semester      String
  repoURL       String        @map("repo_url")

  partnerId     String        @map("partner_id")
  partner       Partner       @relation(fields: [partnerId], references: [id])

  teams         Team[]

  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  @@map("projects")
}

model Team {
  id          String     @id @default(uuid())
  name        String
  semester    String
  
  projectId   String     @map("project_id")
  project     Project    @relation(fields: [projectId], references: [id])

  students    Student[]

  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@map("teams")
}

model Student {
  id            String      @id @default(uuid())
  github        String?     @unique
  discord       String?     @unique
  email         String      @unique
  netID         String      @map("net_id") @unique
  firstName     String      @map("first_name")
  lastName      String      @map("last_name")
  major         String 
  year          Year
  class         String
  enrollment    String
  status        Status

  teams         Team[]

  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@map("students")
}

enum Year {
  FRESHMAN
  SOPHOMORE
  JUNIOR
  SENIOR
}

enum ProjectType {
  SOFTWARE
  HARDWARE
  BOTH
}

enum Status {
  NEW
  RETURNING
  ARCHIVED
}